import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import{a as I,b as C,c as N,d as D,f as x}from"./chunk-PKMSFGNV.js";import"./chunk-FACL5JC5.js";import{b as w}from"./chunk-RJJU2M3A.js";import"./chunk-H7EI5QTD.js";import{a as E}from"./chunk-N4QYMUI4.js";import"./chunk-CCZ55TG3.js";import{a as g}from"./chunk-3HFDZJBW.js";import"./chunk-XOWZQRGH.js";import"./chunk-NWEJ2BHT.js";import"./chunk-NX7YLKSA.js";import"./chunk-TISVPECQ.js";import"./chunk-4YVTD2GL.js";import"./chunk-Z2UWNMEU.js";import"./chunk-ZBJRW65P.js";import"./chunk-G3RJ67HQ.js";import{a as l,b as y,c as u}from"./chunk-XKUUBNP5.js";import"./chunk-KGVPDSRT.js";import"./chunk-KHHAS67O.js";import"./chunk-YXF3QNRI.js";import"./chunk-3JLE6D3G.js";import{f,g as p}from"./chunk-FCAB5YK5.js";import"./chunk-TEVFRW7G.js";import{c,e as d}from"./chunk-JOXYEZYT.js";import{i as t}from"./chunk-UO4ZAUJK.js";t();t();import{cwd as T}from"node:process";t();async function P(e,o,n,i,r){let a;try{e?(a=r.logDependencyInstalling(e,null),await D(e,null,o.projectFolder,i)):(a=r.logAllDependenciesInstalling(),await x(o.projectFolder,i)),await N(o.projectFolder,{authState:n})}finally{a&&a()}}t();import k from"node:path";import L from"node:fs";t();import{join as F}from"node:path";var j=F("src",l);async function h(e){let o=await f(F(e,j));try{return y.parse(o)}catch(n){throw new c({code:d.InvalidVeloConfigJson({configFilename:j,cause:n})})}}var M=async(e,o)=>{let n=k.join(e,"src",l);if(await p(n))try{o.logMigratingToAnyNpm();let i=await h(e);await C(e,i),await L.promises.unlink(n),o.logMigrationToAnyNpmCompletedSuccessfully()}catch(i){throw o.logMigrationToAnyNpmFailed(i),i}};async function v({biLogger:e,errorReporter:o},n,i){let r=await u(T()),a=await E({metaSiteId:r.metaSiteId,biLogger:e,errorReporter:o}),A=g(),s=w({t:A}),S=i?.trim()??null,m;n.yarn?m="yarn":n.npm?m="npm":m=await I(r.projectFolder),await M(r.projectFolder,s),await P(S,r,a,m,s)}export{v as install};
//# sourceMappingURL=install-B6UH5IXJ.js.map
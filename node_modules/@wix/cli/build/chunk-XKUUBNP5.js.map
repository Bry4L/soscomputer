{"version":3,"sources":["../../cli-site/src/model.ts","../../cli-site/src/files/velo.config.ts","../../cli-site-definitions/src/index.ts"],"sourcesContent":["import type { VeloConfig } from '@wix/cli-site-definitions';\nimport { loadVeloConfig, saveVeloConfig } from './files/velo.config.js';\n\nexport type ProjectModel = {\n  projectFolder: string;\n  metaSiteId: string;\n  revision: string;\n};\n\nexport async function loadProjectModel(\n  projectFolder: string\n): Promise<ProjectModel> {\n  const config = await loadVeloConfig(projectFolder);\n  return {\n    projectFolder,\n    metaSiteId: config.siteId,\n    revision: config.uiVersion,\n  };\n}\n\nexport async function saveProjectModel(model: ProjectModel): Promise<void> {\n  const config: VeloConfig = {\n    siteId: model.metaSiteId,\n    uiVersion: model.revision,\n  };\n\n  await saveVeloConfig(model.projectFolder, config);\n}\n","import { join } from 'node:path';\nimport type { VeloConfig } from '@wix/cli-site-definitions';\nimport { CONFIG_FILENAME } from '@wix/cli-core-definitions';\nimport { veloConfigSchema } from '@wix/cli-site-definitions';\nimport { readJson, writeJson } from '@wix/cli-fs';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\n\nexport async function saveVeloConfig(\n  projectFolder: string,\n  config: VeloConfig\n) {\n  await writeJson(join(projectFolder, CONFIG_FILENAME), config, {\n    spaces: 2,\n  });\n}\n\nexport async function loadVeloConfig(projectFolder: string) {\n  const configFile = await readJson(join(projectFolder, CONFIG_FILENAME));\n\n  try {\n    return veloConfigSchema.parse(configFile);\n  } catch (e) {\n    throw new CliError({\n      code: CliErrorCode.InvalidVeloConfigJson({\n        configFilename: CONFIG_FILENAME,\n        cause: e,\n      }),\n    });\n  }\n}\n","import { z } from 'zod';\n\nexport const DEPENDENCIES_CONFIG_FILENAME = 'velo.dependencies.json';\n\nexport const veloConfigSchema = z.object({\n  siteId: z.string().uuid(),\n  uiVersion: z.string(),\n});\nexport type VeloConfig = z.infer<typeof veloConfigSchema>;\n\nexport const dependenciesConfigSchema = z.object({\n  dependencies: z.record(z.string()),\n});\nexport type DependenciesConfig = z.infer<typeof dependenciesConfigSchema>;\n"],"mappings":";;iNAAAA,ICAAC,IAAA,OAAS,QAAAC,MAAY,YCArBC,IAEO,IAAMC,EAA+B,yBAE/BC,EAAmBC,EAAE,OAAO,CACvC,OAAQA,EAAE,OAAO,EAAE,KAAK,EACxB,UAAWA,EAAE,OAAO,CACtB,CAAC,EAGYC,EAA2BD,EAAE,OAAO,CAC/C,aAAcA,EAAE,OAAOA,EAAE,OAAO,CAAC,CACnC,CAAC,EDLD,eAAsBE,EACpBC,EACAC,EACA,CACA,MAAMC,EAAUC,EAAKH,EAAeI,CAAe,EAAGH,EAAQ,CAC5D,OAAQ,CACV,CAAC,CACH,CAEA,eAAsBI,EAAeL,EAAuB,CAC1D,IAAMM,EAAa,MAAMC,EAASJ,EAAKH,EAAeI,CAAe,CAAC,EAEtE,GAAI,CACF,OAAOI,EAAiB,MAAMF,CAAU,CAC1C,OAASG,EAAG,CACV,MAAM,IAAIC,EAAS,CACjB,KAAMC,EAAa,sBAAsB,CACvC,eAAgBP,EAChB,MAAOK,CACT,CAAC,CACH,CAAC,CACH,CACF,CDpBA,eAAsBG,EACpBC,EACuB,CACvB,IAAMC,EAAS,MAAMC,EAAeF,CAAa,EACjD,MAAO,CACL,cAAAA,EACA,WAAYC,EAAO,OACnB,SAAUA,EAAO,SACnB,CACF,CAEA,eAAsBE,EAAiBC,EAAoC,CACzE,IAAMH,EAAqB,CACzB,OAAQG,EAAM,WACd,UAAWA,EAAM,QACnB,EAEA,MAAMC,EAAeD,EAAM,cAAeH,CAAM,CAClD","names":["init_esm_shims","init_esm_shims","join","init_esm_shims","DEPENDENCIES_CONFIG_FILENAME","veloConfigSchema","z","dependenciesConfigSchema","saveVeloConfig","projectFolder","config","writeJson","join","CONFIG_FILENAME","loadVeloConfig","configFile","readJson","veloConfigSchema","e","CliError","CliErrorCode","loadProjectModel","projectFolder","config","loadVeloConfig","saveProjectModel","model","saveVeloConfig"]}